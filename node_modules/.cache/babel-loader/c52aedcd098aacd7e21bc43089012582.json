{"ast":null,"code":"const express = require('express');\n\nconst app = express();\n\nconst mysql = require('mysql2/promise');\n\nconst port = 3001;\n\nconst bluebird = require('bluebird');\n\nconst {\n  response\n} = require('express');\n\nconst cors = require('cors');\n\nlet connection;\napp.use(express.json());\napp.use(cors({\n  origin: true\n}));\napp.get('/get-service', async (req, res) => {\n  const [rows, fields] = await connection.execute(\"SELECT * FROM servicios\");\n  console.log({\n    data: rows\n  });\n  res.json({\n    data: rows\n  });\n});\napp.get('/get-user', async (req, res) => {\n  const email = req.query.email;\n  const [rows, fields] = await connection.execute(`SELECT * FROM usuarios where email = '${email}'`);\n  res.json(rows[0]);\n});\napp.get('/get-ventas', async (req, res) => {\n  const [rows, fields] = await connection.execute(\"SELECT * FROM ventas\");\n  console.log({\n    data: rows\n  });\n  res.json({\n    data: rows\n  });\n});\napp.get('/get-users', async (req, res) => {\n  const [rows, fields] = await connection.execute(\"SELECT * FROM usuarios\"); // console.log({data:rows})\n\n  res.json({\n    data: rows\n  });\n});\napp.post('/add-service', async (req, res) => {\n  const service = req.body;\n  const detalle = service.detalle;\n  const valor = service.valor;\n  const estado = service.estado;\n  await connection.execute(`INSERT INTO servicios ( detalle, valor, estado) VALUES( '${detalle}', ${valor},'${estado}')`);\n  res.json(service);\n});\napp.post('/add-venta', async (req, res) => {\n  const venta = req.body;\n  const detalle = venta.detalle;\n  const cantidad = venta.cantidad;\n  const fecha = venta.fechaVenta;\n  const valor = venta.valor;\n  const docu = venta.documento;\n  const name = venta.name;\n  const responsable = venta.responsable;\n  const estado = venta.estado;\n  await connection.execute(`INSERT INTO ventas ( detalle, cantidad,fechaVenta,valor,documento,name,Responsable,estado ) \n  VALUES('${detalle}',${cantidad},'${fecha}','${valor}','${docu}','${name}','${responsable}','${estado}')`);\n  res.json(venta);\n});\napp.post('/add-users', async (req, res) => {\n  const user = req.body;\n  const name = user.name;\n  const role = user.role;\n  const autorizado = user.autorizado;\n  const email = user.email;\n  await connection.execute(`INSERT INTO Usuarios(name,role,autorizado,email)VALUES('${name}','${role}','${autorizado}','${email}')`);\n  res.json(user);\n});\napp.delete('/delete-user', async (req, res) => {\n  const user = req.body;\n  const name = user.name;\n  const idUsuario = user.idUsuario;\n  const role = user.role;\n  const autorizado = user.autorizado;\n  const email = user.email;\n  await connection.execute(` delete from  Usuarios where idUsuario= '${idUsuario}' `);\n  res.json(user);\n});\napp.put('/update-user', async (req, res) => {\n  const user = req.body;\n  const name = user.name;\n  const idUsuario = user.idUsuario;\n  const role = user.role;\n  const autorizado = user.autorizado;\n  const email = user.email;\n  await connection.execute(` Update  Usuarios set name='${name}', role ='${role}' , autorizado= '${autorizado}',  email =  '${email}' where idUsuario= '${idUsuario}' `);\n  res.json(user);\n});\napp.listen(port, async () => {\n  connection = await mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: 'juan970226',\n    database: 'Lavadero',\n    Promise: bluebird\n  });\n  console.log(\"Server running on port: \" + port);\n});\napp.delete('/update-service', (req, res) => {\n  const product = req.body;\n  console.log(product.name);\n  res.json(product);\n});\napp.put('/put-service', (req, res) => {\n  const product = req.body;\n  console.log(product.name);\n  res.json(product);\n});","map":{"version":3,"sources":["D:/03.ITM 8 semestre/Mintic/Ciclo3/Git/src/gestionServicios/GesServicePage.jsx"],"names":["express","require","app","mysql","port","bluebird","response","cors","connection","use","json","origin","get","req","res","rows","fields","execute","console","log","data","email","query","post","service","body","detalle","valor","estado","venta","cantidad","fecha","fechaVenta","docu","documento","name","responsable","user","role","autorizado","delete","idUsuario","put","listen","createConnection","host","password","database","Promise","product"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst app = express();\r\nconst mysql      = require('mysql2/promise');\r\nconst port = 3001\r\nconst bluebird = require('bluebird');\r\nconst { response } = require('express');\r\nconst cors = require('cors');\r\nlet connection; \r\n\r\napp.use(express.json());\r\napp.use(cors({origin:true}));\r\n\r\n\r\n\r\napp.get('/get-service', async(req,res)=> {\r\n  const [rows, fields] = await connection.execute(\"SELECT * FROM servicios\");\r\n  console.log({data:rows})\r\n  res.json({data:rows});\r\n \r\n\r\n})\r\n\r\napp.get('/get-user', async(req,res) => {\r\n  const email = req.query.email;\r\n  const [rows, fields] = await connection.execute(`SELECT * FROM usuarios where email = '${email}'`);\r\n  res.json(rows[0])\r\n})\r\n\r\n\r\napp.get('/get-ventas', async(req,res) => {\r\n  const [rows, fields ] = await connection.execute(\"SELECT * FROM ventas\");\r\n  console.log({data:rows})\r\n  res.json({data:rows});\r\n})\r\napp.get('/get-users', async(req,res) =>{\r\n  const [rows,fields] = await connection.execute(\"SELECT * FROM usuarios\");\r\n  // console.log({data:rows})\r\n  res.json({data:rows});\r\n})\r\n\r\n\r\napp.post('/add-service', async (req,res)=>{\r\n  \r\n  const service = req.body;\r\n  const detalle = service.detalle;\r\n  const valor = service.valor;\r\n  const estado = service.estado;\r\n  await connection.execute(`INSERT INTO servicios ( detalle, valor, estado) VALUES( '${detalle}', ${valor},'${estado}')`);\r\n  res.json(service)\r\n})\r\napp.post('/add-venta', async (req,res) =>{\r\n  const venta = req.body;\r\n  const detalle = venta.detalle;\r\n  const cantidad = venta.cantidad;\r\n  const fecha = venta.fechaVenta;\r\n  const valor = venta.valor;\r\n  const docu = venta.documento;\r\n  const name = venta.name ;\r\n  const responsable = venta.responsable;\r\n  const estado = venta.estado;\r\n  await connection.execute(`INSERT INTO ventas ( detalle, cantidad,fechaVenta,valor,documento,name,Responsable,estado ) \r\n  VALUES('${detalle}',${cantidad},'${fecha}','${valor}','${docu}','${name}','${responsable}','${estado}')`);\r\n  res.json(venta)\r\n})\r\n\r\napp.post('/add-users', async (req,res) => {\r\n  const user = req.body;\r\n  const name = user.name;\r\n  const role = user.role;\r\n  const autorizado = user.autorizado;\r\n  const email = user.email;\r\n  await connection.execute(`INSERT INTO Usuarios(name,role,autorizado,email)VALUES('${name}','${role}','${autorizado}','${email}')`);\r\n  res.json(user)\r\n})\r\n\r\napp.delete('/delete-user', async (req,res)=>{\r\n  const user = req.body;\r\n  const name = user.name;\r\n  const idUsuario = user.idUsuario;\r\n  const role = user.role;\r\n  const autorizado = user.autorizado;\r\n  const email = user.email;\r\n  await connection.execute(` delete from  Usuarios where idUsuario= '${idUsuario}' `);\r\n  res.json(user)\r\n})\r\n\r\napp.put('/update-user',async (req,res)=>{\r\n  const user = req.body;\r\n  const name = user.name;\r\n  const idUsuario = user.idUsuario;\r\n  const role = user.role;\r\n  const autorizado = user.autorizado;\r\n  const email = user.email;\r\n  await connection.execute(` Update  Usuarios set name='${name}', role ='${role}' , autorizado= '${autorizado}',  email =  '${email}' where idUsuario= '${idUsuario}' `);\r\n  res.json(user)\r\n})\r\n\r\n\r\n\r\n\r\napp.listen(port, async() => {\r\n  connection = await mysql.createConnection({\r\n    host     : 'localhost',\r\n    user     : 'root',\r\n    password : 'juan970226',\r\n    database : 'Lavadero',\r\n    Promise : bluebird\r\n  });\r\n    \r\n    console.log(\"Server running on port: \" + port);\r\n})\r\napp.delete('/update-service',(req,res)=>{\r\n  const product = req.body;\r\n  console.log(product.name)\r\n  res.json(product)\r\n})\r\n\r\n\r\n\r\n\r\n\r\napp.put('/put-service',(req,res)=>{\r\n  const product = req.body;\r\n  console.log(product.name)\r\n  res.json(product)\r\n})"]},"metadata":{},"sourceType":"module"}